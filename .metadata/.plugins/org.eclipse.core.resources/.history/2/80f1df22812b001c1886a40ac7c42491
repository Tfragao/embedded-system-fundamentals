/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

#include<stdint.h>

int main(void)
{
	uint32_t volatile *pClkctrlReg   = (uint32_t*)0x40023830;
	uint32_t volatile *pPortAModeReg = (uint32_t*)0x40020000;
	uint32_t volatile *pPortAoutReg =  (uint32_t*)0x40020014;
	uint32_t volatile *pPortAinputReg = (uint32_t*)0x40020010;

	//1. Enable clock
	*pClkctrlReg |= (1 << 0);

	//2. Configure the mode of the IO pin as output (PA5)
	*pPortAModeReg &= ~(3 << 10);
	*pPortAModeReg |= (1 << 10);

	//Configure PA0 as input mode
	*pPortAModeReg &= ~(3 << 0);

	while(1)
	{
	//Read pin status of the pin A0 (GPIO INPUT DATA REG)
	 uint8_t pinStatus = (uint8_t) *pPortAinputReg & 0x1;

	if(pinStatus)
		*pPortAoutReg |= (1 << 5);    //Turn ON the LED
	else
		*pPortAoutReg &= ~(1 << 5);   //Turn off the LED

	}

}
